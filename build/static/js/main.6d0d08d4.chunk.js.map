{"version":3,"sources":["utils/common.js","constants/index.js","StockItem.js","Stock.js","App.js","serviceWorker.js","index.js"],"names":["getStockCodes","stocks","map","code","isNaN","toLowerCase","indexOf","toUpperCase","replace","genFnForBC","stock","bcFn","position","price","costPrice","soryBy","key","type","calcFnResult","formula","targetValue","ratio","i","flag","realValue","formulaStr","result","eval","x","STOCKS","name","caclClass","number","StockItem","data","url","bcLinkData","eq","color","window","jcLinkData","jcFn","linkData","btoa","JSON","stringify","calcLink","open","this","props","earningsPerShare","earningCls","advice","earnRate","className","onClick","handleLinkClick","toFixed","percent","Component","$","TYPE_MAP","asce","desc","Stock","setSotcks","serverData","stockMap","Object","values","reduce","sum","symbol","localStock","stockItem","setState","handleSortChange","e","sort","target","value","state","fetchStocks","setInterval","clearInterval","stockCodes","String","_this","ajax","dataType","join","success","status","xhr","error","console","split","sortedStocks","s1","s2","onChange","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"6JACO,SAASA,gBAA4B,IAAdC,EAAa,uDAAJ,GACrC,OAAOA,EAAOC,KAAI,SAACC,GACf,OAAGC,MAAMD,EAAK,IACPA,EAAKE,cAAcC,QAAQ,QAAU,EAC7BH,EAAKI,cACPJ,EAAKG,QAAQ,OAAS,EACpBH,EAEAA,EAAKE,cAAcG,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MAI3C,MAAZL,EAAK,GAAa,IAAM,KAAOA,KAM1C,SAASM,aAAyB,IAAdR,EAAa,uDAAJ,GAClC,OAAOA,EAAOC,KAAI,SAAAQ,GAGhB,OADAA,EAAMC,KAAN,YAAkBD,EAAME,SAAxB,cAAsCF,EAAMG,MAA5C,cAAuDH,EAAMI,UAA7D,YAA0EJ,EAAME,SAAhF,cAA8FF,EAAMG,MAApG,MACOH,KAIJ,SAASK,OAAOC,EAAKC,IASrB,SAASC,eAMd,IANuD,IAA5BC,QAA2B,uDAAjB,GAAIC,YAAa,uCAChDC,MAAQ,IACVC,EAAI,EACJC,MAAO,EACPC,UAAYJ,YAEVG,MAAM,CACV,IAAME,WAAcN,QAAQX,QAAQ,KAAhB,WAA0Ba,MAAQC,IAChDI,OAASC,KAAKF,YACjBC,QAAUN,aACXI,UAAYE,OACZH,MAAO,GAEPD,IAGCA,EAAI,MACLC,MAAO,GAGX,MAAO,CAAEK,EAAGP,MAAMC,EAAGF,wBAAaI,qBAxDpC,oK,qQCUaK,EAAS,CACpB,CACEC,KAAM,2BAEN3B,KAAM,SAENW,UAAW,OAEXF,SAAU,KAEZ,CACEkB,KAAM,2BAEN3B,KAAM,SAENW,UAAW,OAEXF,SAAU,KAEZ,CACEkB,KAAM,2BAEN3B,KAAM,SAENW,UAAW,OAEXF,SAAU,KAEZ,CACEkB,KAAM,2BAEN3B,KAAM,SAENW,UAAW,OAEXF,SAAU,KAEZ,CACEkB,KAAM,2BAEN3B,KAAM,SAENW,UAAW,MAEXF,SAAU,KAEZ,CACEkB,KAAM,2BAEN3B,KAAM,SAENW,UAAW,OAEXF,SAAU,KAEZ,CACEkB,KAAM,2BAEN3B,KAAM,SAENW,UAAW,OAEXF,SAAU,M,MClEd,SAASmB,EAAUC,GACjB,OAAIA,EAAS,EACJ,MACEA,EAAS,EACX,QAEA,U,IAkBUC,E,wLAEHC,GACd,IAAMC,EAjBV,SAAkBD,GAChB,IAAME,EAAa,CACjB,CAAEnB,KAAM,EAAGoB,GAAIH,EAAKvB,KAAM2B,MAAO,WACjC,CAAErB,KAAM,IAAMsB,OAAQ,CAAC,OAAQ,OAAQ,IAAK,SAExCC,EAAa,CACjB,CAAEvB,KAAM,EAAGoB,GAAIH,EAAKO,KAAMH,MAAO,WACjC,CAAErB,KAAM,IAAMsB,OAAQ,CAAC,OAAQ,MAAO,OAAQ,SAE1CG,EAAWR,EAAKpB,UAAYoB,EAAKrB,MAAQuB,EAAaI,EAE5D,MAAM,uBAAN,OAA8BD,OAAOI,KAAKC,KAAKC,UAAUH,KAM3CI,CAASZ,GACrBK,OAAOQ,KAAKZ,EAAKD,EAAKJ,Q,+BAGd,IAAD,OACCI,EAASc,KAAKC,MAAdf,KAEFgB,EAAmBhB,EAAKrB,MAAQqB,EAAKpB,UACrCqC,EAAapB,EAAUmB,GAGzBE,EAAS,GAKb,OAJIF,EAAmB,GAAKhB,EAAKmB,WAAa,OAC5CD,EAASlC,YAAagB,EAAKvB,KDvCD,MC2C1B,yBAAK2C,UAAU,cACb,4BAAKpB,EAAKJ,MACV,yBAAKwB,UAAU,kBACb,2BAAOA,UAAU,oBAAoBJ,EAAmB,EAAI,2BAAS,2BAArE,KACA,0BACEI,UAAU,wBACVC,QAAS,WACP,EAAKC,gBAAgBtB,KAGtBgB,EAAmB,EAAIhB,EAAKvB,KAAOuB,EAAKO,OAG7C,yBAAKa,UAAU,kBACb,2BAAOA,UAAU,oBAAjB,iBACA,0BAAMA,UAAS,2BAAsBH,KAAgC,IAAhBjB,EAAKmB,UAAgBI,QAAQ,GAAlF,MAEF,yBAAKH,UAAU,kBACb,2BAAOA,UAAU,oBAAjB,iBACA,0BAAMA,UAAU,oBAAoBpB,EAAKpB,YAE3C,yBAAKwC,UAAU,gBACf,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,oBAAjB,iBACA,0BAAMA,UAAU,oBAAoBpB,EAAKrB,QAE3C,yBAAKyC,UAAU,kBACb,2BAAOA,UAAU,oBAAjB,iBACA,0BAAMA,UAAS,2BAAsBvB,EAAUG,EAAKwB,YAA6B,IAAfxB,EAAKwB,SAAeD,QAAQ,GAA9F,MAEF,yBAAKH,UAAU,gBACdF,EAAOxB,GACN,yBAAK0B,UAAU,8BACb,2BAAOA,UAAU,oBAAjB,iBACA,0BAAMA,UAAU,iCAAhB,yFACkB,uBAAGA,UAAU,QAAQF,EAAOxB,GAD9C,wCAEE,uBAAG0B,UAAU,QAAb,OAAsBpB,EAAKrB,MAAQuC,EAAOxB,GAF5C,yCAGE,uBAAG0B,UAAU,SAA4B,IAAnBF,EAAO5B,WAAiBiC,QAAQ,GAAtD,KAHF,gB,GAtD2BE,aCtBjCC,G,MAAIrB,OAAOqB,GACXC,EAAW,CACfC,KAAM,EACNC,MAAO,GAKYC,E,YACnB,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KAqCRgB,UAAY,SAAAC,GACV,IAAMC,EAAWC,OAAOC,OAAOH,GAAYI,QAAO,SAACC,EAAK7D,GAEtD,OADA6D,EAAI7D,EAAM8D,QAAU9D,EACb6D,IACN,IAEGtE,EAAS4B,EAAO3B,KAAI,SAAAuE,GACxB,GAAIN,EAASM,EAAWtE,MAAO,CAC7B,IAAMuE,EAAS,eACVD,EADU,GAEVN,EAASM,EAAWtE,OAEjBW,EAA+B4D,EAA/B5D,UAAWD,EAAoB6D,EAApB7D,MAAOD,EAAa8D,EAAb9D,SAQ1B,OANIE,EAAYD,EACd6D,EAAU/D,KAAV,cAAwBC,EAAWC,GAAO4C,QAAQ,GAAlD,YAAwD5C,EAAxD,eAAoEC,EAApE,YAAiFF,EAAjF,YAA6FC,EAA7F,MAEA6D,EAAUjC,KAAV,YAAsB7B,EAAWC,GAAO4C,QAAQ,GAAhD,YAAsD5C,EAAtD,eAAkEC,EAAlE,YAA+EF,EAA/E,YAA2FC,EAA3F,QAEF6D,EAAUrB,SAAWxC,EAAQC,EAAY,EAClC4D,EAEP,OAAOD,KAIX,EAAKxE,OAAL,YAAkBA,GAClB,EAAK0E,SAAS,CACZ1E,YAlEe,EAsEnB2E,iBAAmB,SAAAC,GACjB,EAAKF,SAAS,CACZG,KAAMD,EAAEE,OAAOC,SAtEjB,EAAKC,MAAQ,CACXhF,OAAQ,GACR6E,KAAM,WAJS,E,iFAQE,IAAD,OAClB9B,KAAKkC,cAELC,aAAY,WACV,EAAKD,gBFzBoB,O,6CE8B3BE,cApBQ,Q,oCAwBR,IAAMC,EAAaxD,EAAO3B,KAAI,SAAAQ,GAAK,OAAI4E,OAAO5E,EAAMP,SAC9CoF,EAAQvC,KAEdY,GACEA,EAAE4B,KAAK,CACLvE,KAAM,MACNwE,SAAU,QACVtD,IAAI,GAAD,OF5CiB,wCE4CjB,OAAoBnC,YAAcqF,GAAYK,KAAK,MACtDC,QAAS,SAASzB,EAAY0B,EAAQC,GACpCN,EAAMtB,UAAUC,IAElB4B,MAAO,SAASjB,GACdkB,QAAQD,MAAM,6C,+BA2CZ,IAAD,EACkB9C,KAAKiC,MAAtBhF,EADD,EACCA,OADD,IACS6E,KACSkB,MAAM,KAFxB,mBAEAhF,EAFA,KAEKC,EAFL,KAGHgF,EAAY,YAAOhG,GAEvB,GAAY,YAARe,EACFiF,EAAejD,KAAK/C,QAAU,OACzB,CACL,IAAMoB,EAAQwC,EAAS5C,IAAS,EAChCgF,EAAehG,EAAO6E,MAAK,SAACoB,EAAIC,GAAL,OAAaD,EAAGlF,GAAOmF,EAAGnF,IAAQK,KAG/D,OACE,yBAAKiC,UAAU,mBACb,4CACA,uCAEE,4BAAQ8C,SAAUpD,KAAK4B,kBACrB,4BAAQI,MAAM,WAAd,WACA,4BAAQA,MAAM,iBAAd,sBACA,4BAAQA,MAAM,iBAAd,wBAGJ,6BACGiB,EAAa/F,KAAI,SAAAQ,GAAK,OACrB,kBAAC,EAAD,CAAWM,IAAKN,EAAMP,KAAM+B,KAAMxB,a,GAtGXiD,a,MCHpB0C,MARf,WACE,OACE,yBAAK/C,UAAU,OACZ,kBAAC,EAAD,QCIagD,QACW,cAA7B/D,OAAOgE,SAASC,UAEe,UAA7BjE,OAAOgE,SAASC,UAEhBjE,OAAOgE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtB,GACLC,QAAQD,MAAMA,EAAMuB,c","file":"static/js/main.6d0d08d4.chunk.js","sourcesContent":["// 对股票id进行处理\nexport function getStockCodes(stocks = []) {\n  return stocks.map((code) => {\n      if(isNaN(code[0])){\n          if(code.toLowerCase().indexOf('us_') > -1){\n              return code.toUpperCase();\n          }else if(code.indexOf('hk') > -1){\n              return code;\n          }else{\n              return code.toLowerCase().replace('sz', '1').replace('sh', '0');\n          }\n          \n      }else{\n          return (code[0] === '6' ? '0' : '1') + code;\n      }\n  });\n}\n\n// 生成补仓函数\nexport function genFnForBC(stocks = []) {\n  return stocks.map(stock => {\n    \n    stock.bcFn = `((${stock.position}+x)${stock.price})/(${stock.costPrice}*${stock.position} + ${stock.price}x)`;\n    return stock;\n  });\n}\n\nexport function soryBy(key, type) {\n  \n}\n\n/**\n * 根据反比函数公式，求一个最小近似值\n * @param {*} formula 公式，变量为x\n * @param {*} targetValue 目标值\n */\nexport function calcFnResult(formula = '', targetValue) {\n  const ratio = 100;\n  let i = 1;\n  let flag = true;\n  let realValue = targetValue;\n\n  while(flag) {\n    const formulaStr  = formula.replace(/x/g, `*${ratio * i}`);\n    const result = eval(formulaStr);\n    if(result <= targetValue) {\n      realValue = result;\n      flag = false;\n    } else {\n      i++;\n    }\n    // 设置边界值，大于100不在循环，避免进入死循环\n    if(i > 100) {\n      flag = false;\n    }\n  }\n  return { x: ratio*i, targetValue, realValue };\n}","// 第三方股市api\nexport const API_BASE_URL = 'https://api.money.126.net/data/feed/';\n\n// 刷新间隔（毫秒）\nexport const UPDATE_INTERVAL = 5000;\n\n// 期望承受亏损比率\nexport const EXPECT_LOSS_RATE = 0.03;\n\n// 持仓股\nexport const STOCKS = [\n  {\n    name: '伊利股份',\n    // 股票代码\n    code: '600887',\n    // 成本价\n    costPrice: 30.243,\n    // 仓位，多少股\n    position: 400,\n  },\n  {\n    name: '中国平安',\n    // 股票代码\n    code: '601318',\n    // 成本价\n    costPrice: 77.987,\n    // 仓位，多少股\n    position: 200,\n  },\n  {\n    name: '格力电器',\n    // 股票代码\n    code: '000651',\n    // 成本价\n    costPrice: 60.625,\n    // 仓位，多少股\n    position: 200,\n  },\n  {\n    name: '东山精密',\n    // 股票代码\n    code: '002384',\n    // 成本价\n    costPrice: 28.213,\n    // 仓位，多少股\n    position: 400,\n  },\n  {\n    name: '华天科技',\n    // 股票代码\n    code: '002185',\n    // 成本价\n    costPrice: 12.870,\n    // 仓位，多少股\n    position: 100,\n  },\n  {\n    name: '华新水泥',\n    // 股票代码\n    code: '600801',\n    // 成本价\n    costPrice: 23.813,\n    // 仓位，多少股\n    position: 400,\n  },\n  {\n    name: '海螺水泥',\n    // 股票代码\n    code: '600585',\n    // 成本价\n    costPrice: 51.851,\n    // 仓位，多少股\n    position: 100,\n  },\n];\n","import React, { Component } from 'react';\nimport { calcFnResult } from './utils/common';\nimport { EXPECT_LOSS_RATE } from './constants';\n\nimport './StockItem.scss';\n\nfunction caclClass(number) {\n  if (number > 0) {\n    return 'red';\n  } else if (number < 0) {\n    return 'green';\n  } else {\n    return 'default';\n  }\n}\n\nfunction calcLink(data) {\n  const bcLinkData = [\n    { type: 0, eq: data.bcFn, color: '#13AD13' },\n    { type: 1000, window: ['-300', '1500', '0', '0.2'] },\n  ];\n  const jcLinkData = [\n    { type: 0, eq: data.jcFn, color: '#ED1717' },\n    { type: 1000, window: ['-100', '500', '-0.1', '0.2'] },\n  ];\n  const linkData = data.costPrice > data.price ? bcLinkData : jcLinkData;\n\n  return `http://fooplot.com/#${window.btoa(JSON.stringify(linkData))}`;\n}\n\nexport default class StockItem extends Component {\n  // 点击补仓函数跳转至函数绘图网站\n  handleLinkClick(data) {\n    const url = calcLink(data);\n    window.open(url, data.name);\n  }\n\n  render() {\n    const { data } = this.props;\n    // 每股收益\n    const earningsPerShare = data.price - data.costPrice;\n    const earningCls = caclClass(earningsPerShare);\n\n    // 计算达到预期亏损的补仓建议\n    let advice = {};\n    if (earningsPerShare < 0 && data.earnRate <= -0.059) {\n      advice = calcFnResult(data.bcFn, EXPECT_LOSS_RATE);\n    }\n\n    return (\n      <div className=\"stock-item\">\n        <h3>{data.name}</h3>\n        <div className=\"stock-spc-item\">\n          <label className=\"stock-item-label\">{earningsPerShare < 0 ? '补仓函数' : '加仓函数'}:</label>\n          <span\n            className=\"stock-item-value link\"\n            onClick={() => {\n              this.handleLinkClick(data);\n            }}\n          >\n            {earningsPerShare < 0 ? data.bcFn : data.jcFn}\n          </span>\n        </div>\n        <div className=\"stock-spc-item\">\n          <label className=\"stock-item-label\">盈亏:</label>\n          <span className={`stock-item-value ${earningCls}`}>{(data.earnRate * 100).toFixed(3)}%</span>\n        </div>\n        <div className=\"stock-spc-item\">\n          <label className=\"stock-item-label\">成本:</label>\n          <span className=\"stock-item-value\">{data.costPrice}</span>\n        </div>\n        <div className=\"white-blank\"></div>\n        <div className=\"stock-spc-item\">\n          <label className=\"stock-item-label\">现价:</label>\n          <span className=\"stock-item-value\">{data.price}</span>\n        </div>\n        <div className=\"stock-spc-item\">\n          <label className=\"stock-item-label\">涨幅:</label>\n          <span className={`stock-item-value ${caclClass(data.percent)}`}>{(data.percent * 100).toFixed(2)}%</span>\n        </div>\n        <div className=\"white-blank\"></div>\n        {advice.x && (\n          <div className=\"stock-spc-item advice-item\">\n            <label className=\"stock-item-label\">建议:</label>\n            <span className=\"stock-item-value advice-value\">\n              目前您的亏损超过了6%。建议补仓<b className=\"mark\">{advice.x}</b>手， 需要资金\n              <b className=\"mark\">¥{data.price * advice.x}</b>, 可将亏损降至\n              <b className=\"mark\">{(advice.realValue * 100).toFixed(3)}%</b>。\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport StockItem from './StockItem';\nimport { getStockCodes } from './utils/common';\nimport { API_BASE_URL, STOCKS, UPDATE_INTERVAL } from './constants';\n// import MOCK_DATA from './mockdata';\n\nimport './Stock.scss';\n\nconst $ = window.$;\nconst TYPE_MAP = {\n  asce: 1,\n  desc: -1,\n};\n\nlet timer = null;\n\nexport default class Stock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: [],\n      sort: 'default',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStocks();\n    // this.setSotcks(MOCK_DATA);\n    setInterval(() => {\n      this.fetchStocks();\n    }, UPDATE_INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(timer);\n  }\n\n  fetchStocks() {\n    const stockCodes = STOCKS.map(stock => String(stock.code));\n    const _this = this;\n    \n    $ &&\n      $.ajax({\n        type: 'GET',\n        dataType: 'jsonp',\n        url: `${API_BASE_URL}${getStockCodes(stockCodes).join(',')}`,\n        success: function(serverData, status, xhr) {\n          _this.setSotcks(serverData);\n        },\n        error: function(e) {\n          console.error('请求接口错误');\n        },\n      });\n  }\n\n  setSotcks = serverData => {\n    const stockMap = Object.values(serverData).reduce((sum, stock) => {\n      sum[stock.symbol] = stock;\n      return sum;\n    }, {});\n    // 合并成本价、持仓信息\n    const stocks = STOCKS.map(localStock => {\n      if (stockMap[localStock.code]) {\n        const stockItem = {\n          ...localStock,\n          ...stockMap[localStock.code],\n        };\n        const { costPrice, price, position } = stockItem;\n\n        if (costPrice > price) {\n          stockItem.bcFn = `1-(${(position * price).toFixed(2)}+${price}x)/(${costPrice}*${position}+${price}x)`;\n        } else {\n          stockItem.jcFn = `(${(position * price).toFixed(2)}+${price}x)/(${costPrice}*${position}+${price}x)-1`;\n        }\n        stockItem.earnRate = price / costPrice - 1;\n        return stockItem;\n      } else {\n        return localStock;\n      }\n    });\n\n    this.stocks = [...stocks];\n    this.setState({\n      stocks,\n    });\n  };\n\n  handleSortChange = e => {\n    this.setState({\n      sort: e.target.value,\n    })\n  };\n\n  render() {\n    const { stocks, sort } = this.state;\n    const [key, type] = sort.split(':');\n    let sortedStocks = [...stocks];\n\n    if (key === 'default') {\n      sortedStocks = this.stocks || [];\n    } else {\n      const ratio = TYPE_MAP[type] || 1;\n      sortedStocks = stocks.sort((s1, s2) => (s1[key] - s2[key]) * ratio);\n    }\n\n    return (\n      <div className=\"stock-list-wrap\">\n        <h2>STOCK HELPER</h2>\n        <div>\n          sort by\n          <select onChange={this.handleSortChange}>\n            <option value=\"default\">default</option>\n            <option value=\"earnRate:asce\">盈亏⬆</option>\n            <option value=\"earnRate:desc\">盈亏⬇</option>\n          </select>\n        </div>\n        <div>\n          {sortedStocks.map(stock => (\n            <StockItem key={stock.code} data={stock} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Stock from './Stock';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Stock />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}